name: "Release on MacOS (x86_64 & Apple Silicon)"

# =============================================================================
# GitHub Actions Workflow: Build and Release HDF5 Static Libraries for MacOS x86_64 & Apple Silicon (arm64)
#
# This workflow builds the HDF5 static libraries and headers for both MacOS x86_64 and Apple Silicon (arm64)
# using the provided build script, and uploads the resulting artifacts for use in downstream jobs or releases.
#
# Triggers:
#   - On push or pull request to the main branch
#
# Artifacts:
#   - hdf5lib_macos_<arch>: Contains the built static libraries and headers for each MacOS architecture
# =============================================================================

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    name: "Build and Archive HDF5 Libraries (${{ matrix.name }})"
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          - name: macos_x86_64
            runner: macos-13
            c_compiler: gcc-14
            cxx_compiler: g++-14
            xcode_version: '15.2'
            artifact: hdf5lib_macos_x86_64
          - name: macos_arm64
            runner: macos-15
            c_compiler: clang
            cxx_compiler: clang++
            xcode_version: '16.3'
            artifact: hdf5lib_macos_arm64

    steps:
      # Checkout repository with submodules
      - name: "Checkout repository"
        uses: actions/checkout@v4
        with:
          submodules: true

      # Setup Xcode (required for some builds)
      - name: "Setup Xcode"
        uses: maxim-lobanov/setup-xcode@v1.6.0
        with:
          xcode-version: ${{ matrix.xcode_version }}

      # (Optional) Cache build dependencies for faster builds
      # - name: "Cache build dependencies"
      #   uses: actions/cache@v4
      #   with:
      #     path: |
      #       ~/Library/Caches
      #     key: ${{ runner.os }}-hdf5lib-${{ hashFiles('**/CMakeLists.txt') }}

      # Build the project
      - name: "Build HDF5 static libraries and headers"
        env:
          CC: ${{ matrix.c_compiler }}
          CXX: ${{ matrix.cxx_compiler }}
        run: |
          chmod +x build.sh
          ./build.sh

      # Upload the built libraries and headers as an artifact
      - name: "Archive built module"
        uses: actions/upload-artifact@v4
        if: success()
        with:
          name: ${{ matrix.artifact }}
          path: ./hdf5lib
          retention-days: 14  # Keep artifact for 14 days (default is 90)

      # (Optional) Add a step to verify the contents of the artifact
      # - name: "List artifact contents"
      #   run: |
      #     ls -l ./hdf5lib
